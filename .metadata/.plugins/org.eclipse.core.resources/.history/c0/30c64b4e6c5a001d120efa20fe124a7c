package com.dress.controller;

import jakarta.annotation.Resource;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

import java.awt.Window;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.sql.DataSource;

import com.hostmdy.model.Dress;
import com.hostmdy.model.DressDAO;

/**
 * Servlet implementation class DressController
 */
public class DressController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	@Resource(name="jdbc/dressonlineshop")
	private DataSource datasourse;
	
	private DressDAO dressDAO;
	
	@Override
	public void init() throws ServletException {
		dressDAO = new DressDAO(datasourse);
	}
    /**
     * @see HttpServlet#HttpServlet()
     */
    public DressController() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String mode = request.getParameter("mode");
		if(mode == null)
			mode="LIST";
		switch(mode) {
			case "LIST":showDressList(request, response);
			break;
			case "CREATE": createDress(request, response);
			break;
			case "LOAD": loadDressList(request, response);
			break;
			case "UPDATE":updateDress(request, response);
			break;
			case "DELETE": deleteDress(request, response);
			break;
			default: showDressList(request, response);
			break;
		}
		 
		
	}

	private void showDressList(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
		List<Dress> dressList = this.dressDAO.getDressList();
		request.setAttribute("dressList", dressList);
		RequestDispatcher rd = request.getRequestDispatcher("index.jsp");
		rd.forward(request, response);
	}
	
	private void loadDressList(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
		int id = Integer.parseInt(request.getParameter("id"));
		Dress dress = this.dressDAO.DressList(id);
		request.setAttribute("dress", dress);
		RequestDispatcher rd = request.getRequestDispatcher("jeanUpdate.jsp");
		rd.forward(request, response);
	}
	
	private void updateDress(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
	
		int id = Integer.parseInt(request.getParameter("id"));
		String code = request.getParameter("code");
		String size = request.getParameter("size");
		String color = request.getParameter("color");
		int price = Integer.parseInt(request.getParameter("price"));
		
		
		Dress dress = new Dress(id,code, size, color, price);
		int rowEffected = this.dressDAO.updateDress(dress);
		if(rowEffected > 0)
			showDressList(request, response);
	}
	
	private void createDress(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
		String code = request.getParameter("code");
		String size = request.getParameter("size");
		String color = request.getParameter("color");
		int pricie = Integer.parseInt(request.getParameter("price"));
		
		Dress dress = new Dress(code, size, color, pricie);
		int rowEffected = this.dressDAO.createDress(dress);
		if(rowEffected > 0)
			showDressList(request, response);
	}
	
	private void deleteDress(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
		PrintWriter out = response.getWriter();
		int id = Integer.parseInt(request.getParameter("id"));
		int rowEffected = this.dressDAO.deleteDress(id);
		if(rowEffected > 0)
			showDressList(request, response);
	}
	
	
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
